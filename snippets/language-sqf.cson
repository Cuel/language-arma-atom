'.source.sqf':
  # BI Commands - Conditional Structures
  'If then statement':
    'prefix': 'if_then'
    'body': """
      if (${1:CONDITION}) then {
          ${2://code}
      };
    """
    'description': 'Conditional if statement'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/if'
  'If-then-else statement':
    'prefix': 'if_then_else'
    'body': """
      if (${1:CONDITION}) then {
          ${2://code}
      } else {
          ${3://code}
      };
    """
    'description': 'Conditional if-else statement'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/else'
  'If-then-else assignment':
    'prefix': 'if_then_else_assign'
    'body': """
      ${1:VARIABLE} = if (${2:CONDITION}) then {${3:ASSIGNMENT_TRUE}} else {${4:ASSIGNMENT_FALSE}};
    """
    'description': 'Conditional if-else assignment'
  'Switch statement':
    'prefix': 'switch'
    'body': """
      switch (${1:VARIABLE}) do {
          ${2://cases (insertable by snippet)}
      };
    """
    'description': 'Conditional switch statement'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/switch_do'
  'Case block of switch':
    'prefix': 'case_switch'
    'body': """
      case (${1:VALUE}): {
          ${2://code}
      };
    """
    'description': 'Case block inside switch statement'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/case'
  'Default block of switch':
    'prefix': 'default_switch'
    'body': """
      default {
          ${1://code}
      };
    """
    'description': 'Default block inside switch statement'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/default'

  # BI Commands - Loops
  'ForEach Loop':
    'prefix': 'forEach'
    'body': """
      {
          ${2://code}
      } forEach ${1:ARRAY};
    """
    'description': 'Array incrementing loop'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/forEach'
  'For Loop (ARRAY)':
    'prefix': 'for_array'
    'body': """
      for [{${1:BEGIN}}, {${2:CONDITION}}, {${3:STEP}}] do {
          ${4://code}
      };
    """
    'description': 'C-like for loop'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/for_forspec'
  'For Loop (VAR)':
    'prefix': 'for_var'
    'body': """
      for ${1:VALUE} from ${2:STARTVALUE} to ${3:ENDVALUE} do {
          ${4://code}
      };
    """
    'description': 'Loop from value to value'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/for_var'
  'For Loop Step (VAR)':
    'prefix': 'for_var_step'
    'body': """
      for ${1:VALUE} from ${2:STARTVALUE} to ${3:ENDVALUE} step ${4:STEP} do {
          ${5://code}
      };
    """
    'description': 'Loop from value to value with custom step'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/for_var'
  'While Loop':
    'prefix': 'while'
    'body': """
      while {${1:CONDITION}} do {
          ${2://code}
      };
    """
    'description': 'Loop while condition is true'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/while'

  # CBA
  'CBA PerFrameHandler Add':
    'prefix': 'cba_pfh_add'
    'body': """
      [${1:FUNCTION/CODE}, ${2:DELAY}, [${3:PARAMETERS}]] call CBA_fnc_addPerFrameHandler;
    """
    'description': 'Add a handler that will execute every frame'
    'descriptionMoreURL': 'https://dev.withsix.com/docs/cba/files/common/fnc_addPerFrameHandler-sqf.html'

  # ACE3
  'ACE3 Function Header':
    'prefix': 'ace_function_header'
    'body': """
      /*
       * Author: ${1:[Name of Author(s)]}
       * ${2:[Description]}
       *
       * Arguments:
       * 0: ${3:Argument Name} <${4:TYPE}>
       *
       * Return Value:
       * ${5:Return Name} <${6:TYPE}>
       *
       * Example:
       * [${7:"example"}] call ace_${8:[module]}_fnc_${9:[functionName]}
       *
       * Public: ${10:[Yes/No]}
       */
      #include "script_component.hpp"
    """
    'description': 'Function Header per ACE3 guidelines.'
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#3-1-function-definitions'
  # control blocks
  'For Loop (ARRAY)':
    'prefix': 'for_array'
    'body': """
    for [{${1:[variable]} = 0},{${1:[variable]} < ${2:[condition]}},{ ${1:[variable]} = ${1:[variable]} + ${3:[step]}}] do {
        ${4:[code]}
    };
    """
    'description': 'For loop (ARRAY)'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/for'
  'For loop (VAR)':
    'prefix': 'for_var'
    'body': """
    for "${1:[variable]}" from ${2:[from]} to ${3:[to]} do {
        ${4:[code]}
    };
    """
    'description': 'For loop (VAR)'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/for'
  'ForEach Loop':
    'prefix': 'forEach'
    'body': """
    {
        ${2:[code]}
    } forEach ${1:[variable]};
    """
    'description': 'ForEach loop'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/foreach'
  'If then':
    'prefix': 'if_then'
    'body': """
    if (${1:[variable]}) then {
        ${2:[code]}
    };
    """
    'description': 'If then'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/if'
  'If then else':
    'prefix': 'if_then_else'
    'body': """
    if (${1:[variable]}) then {
        ${2:[code]}
    } else {

    };
    """
    'description': 'If then else'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/if'
  'If ExitWith statement':
      'prefix': 'if_exitWith'
      'body': """
      if (${1:[variable]}) exitwith {
          ${2:[code]}
      };
      """
      'description': 'If exitwith'
      'descriptionMoreURL': 'https://community.bistudio.com/wiki/exitwith'
  'ExitWith statement':
    'prefix': 'exitWith'
    'body': """
    if (${1:[variable]}) exitwith {
        ${2:[code]}
    };
    """
    'description': 'If exitwith'
    'descriptionMoreURL': 'https://community.bistudio.com/wiki/exitwith'

# Macros
  'GVAR':
    'prefix': 'GVAR'
    'body': """
    GVAR(${1:[variable]})
    """
    'description': 'Expand to PREFIX_MODULE_variable'
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'QGVAR':
    'prefix': 'QGVAR'
    'body': """
    QGVAR(${1:[variable]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'EGVAR':
    'prefix': 'EGVAR'
    'body': """
    EGVAR(${1:[component]}),${2:[variable]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'QEGVAR':
    'prefix': 'QEGVAR'
    'body': """
    QEGVAR(${1:[component]}),${2:[variable]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'FUNC':
    'prefix': 'FUNC'
    'body': """
    FUNC(${1:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'EFUNC':
    'prefix': 'EFUNC'
    'body': """
    EFUNC(${1:[component name]}),${2:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'DFUNC':
    'prefix': 'DFUNC'
    'body': """
    DFUNC(${1:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'DEFUNC':
    'prefix': 'DEFUNC'
    'body': """
    DEFUNC(${1:[component name]}),${2:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'QFUNC':
    'prefix': 'QFUNC'
    'body': """
    QFUNC(${1:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'QEFUNC':
    'prefix': 'QEFUNC'
    'body': """
    QEFUNC(${1:[component name]}),${2:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'QUOTE':
    'prefix': 'QUOTE'
    'body': """
    QUOTE(${1:[Content]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'LSTRING':
    'prefix': 'LSTRING'
    'body': """
    LSTRING(${1:[String table entry]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'ELSTRING':
    'prefix': 'ELSTRING'
    'body': """
    ELSTRING(${1:[Component]}),${2:[String table entry]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'CSTRING':
    'prefix': 'CSTRING'
    'body': """
    CSTRING(${1:[String table entry]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'ECSTRING':
    'prefix': 'ECSTRING'
    'body': """
    ELSTRING(${1:[Component]}),${2:[String table entry]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'



# Config snippets
'.source.cpp, .source.hpp':
  # ACE3
  'ACE3 Settings Entry':
    'prefix': 'ace_settings_entry'
    'body': """
      class GVAR(${1:name}) {
          displayName = CSTRING(${2:stringDisplayName});
          description = CSTRING(${3:stringDescription});
          isClientSettable = ${4:[0/1]};
          typeName = "${5:[BOOL/SCALAR/STRING/ARRAY/COLOR]]}";
          value = ${6:[Number]};
      };
    """
    'description': 'ACE_Settings Entry (without SCALAR values)'
    'descriptionMoreURL': 'http://ace3mod.com/wiki/framework/settings.html'

# Macros
  'GVAR':
    'prefix': 'GVAR'
    'body': """
    GVAR(${1:[variable]})
    """
    'description': 'Expand to PREFIX_MODULE_variable'
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'QGVAR':
    'prefix': 'QGVAR'
    'body': """
    QGVAR(${1:[variable]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'EGVAR':
    'prefix': 'EGVAR'
    'body': """
    EGVAR(${1:[component]}),${2:[variable]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'QEGVAR':
    'prefix': 'QEGVAR'
    'body': """
    QEGVAR(${1:[component]}),${2:[variable]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'FUNC':
    'prefix': 'FUNC'
    'body': """
    FUNC(${1:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'EFUNC':
    'prefix': 'EFUNC'
    'body': """
    EFUNC(${1:[component name]}),${2:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'DFUNC':
    'prefix': 'DFUNC'
    'body': """
    DFUNC(${1:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'DEFUNC':
    'prefix': 'DEFUNC'
    'body': """
    DEFUNC(${1:[component name]}),${2:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'QFUNC':
    'prefix': 'QFUNC'
    'body': """
    QFUNC(${1:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'QEFUNC':
    'prefix': 'QEFUNC'
    'body': """
    QEFUNC(${1:[component name]}),${2:[function name]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'QUOTE':
    'prefix': 'QUOTE'
    'body': """
    QUOTE(${1:[Content]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'LSTRING':
    'prefix': 'LSTRING'
    'body': """
    LSTRING(${1:[String table entry]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'ELSTRING':
    'prefix': 'ELSTRING'
    'body': """
    ELSTRING(${1:[Component]}),${2:[String table entry]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'CSTRING':
    'prefix': 'CSTRING'
    'body': """
    CSTRING(${1:[String table entry]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'

  'ECSTRING':
    'prefix': 'ECSTRING'
    'body': """
    ELSTRING(${1:[Component]}),${2:[String table entry]})
    """
    'description': ''
    'descriptionMoreURL': 'http://ace3mod.com/wiki/development/coding-guidelines.html#4-2-general-purpose-macros'
